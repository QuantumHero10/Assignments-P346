import numpy as np
def printmatrix(M):
  n=len(M)
  for i in range (n):
    for j in range (n+1):
      print(float(M[i,j]),end='      ')
    print("\n")
  print("\n") 

def swap(M,n):
  x=n
  y=M[n,n]
  m=len(M)
  for i in range (m):
    for j in range (n,(n+1)):
      k=M[i,j]
      if k**2 >= y**2:
        y=k
        x=i
  if x<n:
    return
  s=np.matrix(M[x])
  M[x]=M[n]
  M[n]=s
  printmatrix(M)



def gje(M):
  n=len(M)-1
  c=0.0
  for i in range (0,n+1):
    if M[i,i]==0:
      swap(M,i)
    M[i]=M[i]/M[i,i]
    for j in range (i+1,n+1):
      c=(M[j,i])/(M[i,i])
      M[j]=M[j]-(c*M[i])

  for i in range (0,n):
    k=n-i
    for j in range (0,k):
      l=k-j-1
      c=(M[l,k])/(M[k,k])
      M[l]=M[l]-(c*M[k])
  return (M)

A = np.matrix([[0.0,1.0,1.0,-2.0,-3.0],[1.0,2.0,-1.0,0.0,2.0],[2.0,4.0,1.0,-3.0,-2.0],[1.0,-4.0,-7.0,-1.0,-19.0]])
printmatrix(A)
B=gje(A)
printmatrix(B)
